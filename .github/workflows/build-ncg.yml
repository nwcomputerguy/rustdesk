name: Build NCG Remote Access

on:
  push:
    branches: [main, master, ncg-1.4]
  workflow_dispatch:

env:
  RUST_VERSION: 1.75.0
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -C target-feature=+crt-static
  VCPKG_ROOT: C:\vcpkg

jobs:
  build-windows:
    runs-on: windows-2022
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.75.0
        targets: x86_64-pc-windows-msvc
        components: rustfmt
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        prefix-key: v1-rust
    
    - name: Install LLVM
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: 16.0
        directory: ${{ runner.temp }}/llvm
    
    - name: Install vcpkg and opus
      shell: cmd
      run: |
        cd C:\
        git clone --depth=1 https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        bootstrap-vcpkg.bat
        vcpkg.exe integrate install
        vcpkg.exe install --triplet x64-windows-static opus
        dir C:\vcpkg\installed\x64-windows-static\include
    
    - name: Fix opus headers
      shell: powershell
      run: |
        $opusInclude = "C:\vcpkg\installed\x64-windows-static\include"
        if (Test-Path "$opusInclude\opus.h") {
            Write-Host "Creating opus subdirectory..."
            New-Item -ItemType Directory -Force -Path "$opusInclude\opus"
            Get-ChildItem "$opusInclude\opus*.h" | ForEach-Object {
                Copy-Item $_.FullName -Destination "$opusInclude\opus\" -Force
                Write-Host "Copied $($_.Name) to opus subdirectory"
            }
        }
    
    - name: Build RustDesk
      shell: cmd
      env:
        LIBCLANG_PATH: ${{ runner.temp }}\llvm\bin
        VCPKG_ROOT: C:\vcpkg
      run: |
        echo Building with LIBCLANG_PATH=%LIBCLANG_PATH%
        echo Building with VCPKG_ROOT=%VCPKG_ROOT%
        cargo build --release --verbose
    
    - name: Package NCG Remote
      if: success()
      shell: cmd
      run: |
        mkdir NCG-Remote-Portable
        copy target\release\rustdesk.exe NCG-Remote-Portable\NCG-Remote-Access.exe
        
        echo rendezvous_server = 'rust.northwoodscomputerguy.com:21116' > NCG-Remote-Portable\RustDesk2.toml
        echo nat_type = 1 >> NCG-Remote-Portable\RustDesk2.toml
        echo serial = 0 >> NCG-Remote-Portable\RustDesk2.toml
        echo. >> NCG-Remote-Portable\RustDesk2.toml
        echo [options] >> NCG-Remote-Portable\RustDesk2.toml
        echo custom-rendezvous-server = 'rust.northwoodscomputerguy.com:21116' >> NCG-Remote-Portable\RustDesk2.toml
        echo key = 'sjVK2P8Cik7MW4v6sn1FhCN5RdRAK1BpqXlSDraF0qY=' >> NCG-Remote-Portable\RustDesk2.toml
        echo relay-server = 'rust.northwoodscomputerguy.com:21117' >> NCG-Remote-Portable\RustDesk2.toml
        echo api-server = '' >> NCG-Remote-Portable\RustDesk2.toml
        
        echo @echo off > NCG-Remote-Portable\Start-NCG-Remote.bat
        echo echo Starting NCG Remote Access... >> NCG-Remote-Portable\Start-NCG-Remote.bat
        echo start "" NCG-Remote-Access.exe >> NCG-Remote-Portable\Start-NCG-Remote.bat
        echo pause >> NCG-Remote-Portable\Start-NCG-Remote.bat
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NCG-Remote-${{ github.run_number }}
        path: NCG-Remote-Portable/

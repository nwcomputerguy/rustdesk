name: Build NCG Remote Access

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-2019
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.65.0
        targets: x86_64-pc-windows-msvc
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install NASM
      uses: ilammy/setup-nasm@v1
    
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "11.0"
        directory: ${{ runner.temp }}/llvm
    
    - name: Set up environment
      shell: cmd
      run: |
        echo LIBCLANG_PATH=${{ runner.temp }}/llvm/lib>> %GITHUB_ENV%
        echo LLVM_PATH=${{ runner.temp }}/llvm>> %GITHUB_ENV%
    
    - name: Install vcpkg packages
      shell: cmd
      run: |
        cd C:\
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        bootstrap-vcpkg.bat
        vcpkg integrate install
        vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static opus:x64-windows-static
    
    - name: Update server configuration
      shell: powershell
      run: |
        # Create directory if it doesn't exist
        New-Item -ItemType Directory -Force -Path src
        
        # Update server config
        $serverConfig = @"
        pub const PROD_RENDEZVOUS_SERVER: &str = "rust.northwoodscomputerguy.com";
        pub const PROD_RENDEZVOUS_PORT: i32 = 21116;
        pub const PROD_RELAY_PORT: i32 = 21117;
        pub const PUBLIC_KEY: &str = "sjVK2P8Cik7MW4v6sn1FhCN5RdRAK1BpqXlSDraF0qY=";
        "@
        
        # Check if server.rs exists and update it
        if (Test-Path "src/server.rs") {
            $content = Get-Content "src/server.rs" -Raw
            # Add your server config at the beginning
            $newContent = $serverConfig + "`n`n" + $content
            Set-Content "src/server.rs" $newContent
        }
        
        # Update Cargo.toml
        if (Test-Path "Cargo.toml") {
            $cargoContent = Get-Content "Cargo.toml" -Raw
            $cargoContent = $cargoContent -replace 'name = "rustdesk"', 'name = "ncg_remote"'
            Set-Content "Cargo.toml" $cargoContent
        }
    
    - name: Build RustDesk
      shell: cmd
      run: |
        set VCPKG_ROOT=C:\vcpkg
        python res/inline-sciter.py
        cargo build --release --features inline
    
    - name: Create portable package
      shell: powershell
      run: |
        # Create portable directory
        New-Item -ItemType Directory -Force -Path "NCG-Remote-Portable"
        
        # Copy executable (handle both possible names)
        if (Test-Path "target\release\rustdesk.exe") {
            Copy-Item "target\release\rustdesk.exe" "NCG-Remote-Portable\NCG-Remote-Access.exe"
        } elseif (Test-Path "target\release\ncg_remote.exe") {
            Copy-Item "target\release\ncg_remote.exe" "NCG-Remote-Portable\NCG-Remote-Access.exe"
        }
        
        # Create config
        @"
        rendezvous_server = 'rust.northwoodscomputerguy.com'
        nat_type = 1
        serial = 0
        
        [options]
        custom-rendezvous-server = 'rust.northwoodscomputerguy.com:21116'
        key = 'sjVK2P8Cik7MW4v6sn1FhCN5RdRAK1BpqXlSDraF0qY='
        relay-server = 'rust.northwoodscomputerguy.com:21117'
        "@ | Out-File -FilePath "NCG-Remote-Portable\RustDesk.toml" -Encoding UTF8
        
        # Create batch file
        @"
        @echo off
        echo Starting NCG Remote Access...
        start NCG-Remote-Access.exe
        "@ | Out-File -FilePath "NCG-Remote-Portable\Start-NCG-Remote.bat" -Encoding ASCII
        
        # Create simple readme
        @"
        NCG Remote Access Tool
        ======================
        
        Double-click NCG-Remote-Access.exe to start.
        
        Your ID will be shown in the window.
        Share this ID with NCG support when needed.
        
        Support: https://northwoodscomputerguy.com
        "@ | Out-File -FilePath "NCG-Remote-Portable\README.txt" -Encoding UTF8
        
        # Zip it
        Compress-Archive -Path "NCG-Remote-Portable\*" -DestinationPath "NCG-Remote-Portable.zip" -Force
    
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NCG-Remote-Build-${{ github.run_number }}
        path: |
          NCG-Remote-Portable.zip
          NCG-Remote-Portable/NCG-Remote-Access.exe
          
    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.3.${{ github.run_number }}
        name: NCG Remote Access v1.3.${{ github.run_number }}
        body: |
          ## NCG Remote Access Tool
          
          **Download:** NCG-Remote-Portable.zip
          
          ### How to Use:
          1. Download and extract the ZIP file
          2. Double-click NCG-Remote-Access.exe
          3. Share your ID with NCG support when requested
          
          This version connects to NCG's private server.
          
          Support: https://northwoodscomputerguy.com
        files: NCG-Remote-Portable.zip
        draft: false
        prerelease: false
